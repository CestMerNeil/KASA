# Sample workflow for building and deploying a Next.js site to GitHub Pages

name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Print working directory after checkout
        run: pwd
      
      - name: List all files for debugging
        run: ls -la

      - name: Detect package manager
        run: |
          if [ -f "kommande-access-gui/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "kommande-access-gui/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      
      - name: Print working directory before setting up Node.js
        run: pwd

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Print Node.js version for debugging
        run: node --version

      - name: Print npm version for debugging
        run: npm --version

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: kommande-access-gui

      - name: List installed node modules
        run: ls -la kommande-access-gui/node_modules

      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
        working-directory: kommande-access-gui

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: kommande-access-gui/out

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
